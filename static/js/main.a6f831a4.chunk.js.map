{"version":3,"sources":["img/food2.jpg","Button.js","Photo.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","useState","classNames","setClassNames","isOn","setIsOn","round","isRounded","setIsRounded","useEffect","className","onClick","prevIsOn","prevIsRounded","name","Photo","alt","src","require","default","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IAAA,OAAe,cAA0B,mC,mGC0B1BA,MAxBf,SAAgBC,GAAQ,IAAD,EAEiBC,mBAAS,IAF1B,mBAEZC,EAFY,KAEAC,EAFA,OAGIF,oBAAS,GAHb,mBAGZG,EAHY,KAGPC,EAHO,OAIeJ,mBAASD,EAAMM,OAJ9B,mBAIZC,EAJY,KAIDC,EAJC,KAgBnB,OAVAC,qBAAU,WACNN,EAAc,GAAD,OAAIC,EAAO,OAAS,QAApB,YAA+BG,EAAY,gBAAkB,oBAC5E,CAACH,EAAMG,IASL,8BACI,wBAAQG,UAAWR,EAAYS,QARvC,WAGI,OAFIN,GAAQ,SAAAO,GAAQ,OAAGA,KACnBJ,GAAa,SAAAK,GAAa,OAAGA,KAC1B,IAKH,SAAsDb,EAAMc,UCVzDC,MARf,SAAef,GACf,OACQ,8BACI,qBAAKU,UAAU,QAAQM,IAAI,GAAGC,IAAKC,EAAQ,IAAmBC,aCW3DC,MAXf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQN,KAAK,QAAQJ,UAAU,gBAAgBJ,MAAM,SACrD,cAAC,EAAD,CAAQQ,KAAK,QAAQJ,UAAU,kBAC/B,cAAC,EAAD,CAAQI,KAAK,QAAQJ,UAAU,sBCCtBW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a6f831a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/food2.0a213c80.jpg\";","import React, {useState, useEffect} from \"react\"\n\nfunction Button(props) {\n\n    const [classNames, setClassNames] = useState(\"\");\n    const [isOn,setIsOn] = useState(false)\n    const [isRounded, setIsRounded] = useState(props.round)\n\n    useEffect(() => {\n        setClassNames(`${isOn ? \"isOn\" : \"isOff\"} ${isRounded ? \"roundedButton\" : \"squaredButton\"}`);\n    },[isOn, isRounded])\n\n    function handleClick() {\n            setIsOn(prevIsOn=>!prevIsOn)\n            setIsRounded(prevIsRounded=>!prevIsRounded)\n        return({})\n    }\n\n    return(\n        <div>\n            <button className={classNames} onClick={handleClick}>{props.name}</button>\n        </div>\n    )\n\n}\n\nexport default Button","import React from 'react'\n\nfunction Photo(props) {\nreturn(\n        <div>\n            <img className=\"photo\" alt=\"\" src={require(\"./img/food2.jpg\").default} />       \n        </div>\n    )\n}\n\nexport default Photo","import './App.css'\nimport Button from './Button'\nimport Photo from './Photo'\n\n\nfunction App() {\n  return (\n    <div>\n      <Photo />\n      <Button name=\"BTN-1\" className=\"roundedButton\" round=\"true\"/>\n      <Button name=\"BTN-2\" className=\"roundedButton\"/>\n      <Button name=\"BTN-3\" className=\"squaredButton\"/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}